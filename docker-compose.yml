services:
  # === Database ===
  db:
    restart: always
    build:
      context: ./datasources/bead_postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: bead
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - 5432:5432
    networks:
      - bead-network
    volumes:
      - bead_db:/var/lib/postgresql/data

  # === Kafka ===
  kafka:
    restart: always
    image: apache/kafka:3.7.0
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - 9092:9092
    volumes:
      - ./kafka/config:/mnt/shared/config
      - ./kafka/data:/var/lib/kafka/data
      - ./kafka/secrets:/etc/kafka/secrets
    networks:
      - bead-network
  kafka-init:
    image: apache/kafka:3.7.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      sleep 3

      echo -e 'Creating Kafka topics...'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092 --create --if-not-exists --topic availTaxis

      echo -e 'Listing all Kafka topics:'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19092 --list
      "
    networks:
      - bead-network

  # === Benthos ===
  benthos:
    restart: always
    build:
      context: ./integration/benthos
    environment:
      SCRIPT_URL: ${SCRIPT_URL}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      KAFKA_BROKER_ADDR: ${KAFKA_BROKER_ADDR}
    networks:
      - bead-network
    volumes:
      - ./datasources/csv:/csv

  # === Script Server ===
  python-server:
    restart: always
    build:
      context: ./integration/python
      dockerfile: Dockerfile
    environment:
      LTA_ACCOUNT_KEY: ${LTA_ACCOUNT_KEY}
      ONE_MAP_ACCOUNT_KEY: ${ONE_MAP_ACCOUNT_KEY}
    ports:
      - 8080:8080
    networks:
      - bead-network
  # === Spark ===
  spark:
    build:
      context: ./spark
      dockerfile: Dockerfile
    environment:
      SPARK_LOCAL_IP: 127.0.0.1
      SCRIPT_URL: ${SCRIPT_URL}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      KAFKA_BROKER_ADDR: ${KAFKA_BROKER_ADDR}
    ports:
      - 8000:8000
    networks:
      - bead-network

  # === Web ===
  web:
    restart: always
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      KAFKA_BROKER_ADDR: ${KAFKA_BROKER_ADDR}
    ports:
      - 4173:4173
    networks:
      - bead-network

# === Volumes (DB) ===
volumes:
  bead_db:

# === Network ===
networks:
  bead-network:
    driver: bridge
    name: bead-network
